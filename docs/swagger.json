{
    "swagger": "2.0",
    "info": {
        "title": "Finance App API",
        "description": "Finance App API usado para usuários gerenciar suas finanças.",
        "version": "1.0.0"
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "description": "Enter your bearer token in the format **Bearer eyJhbGciOiJIUzI1NiIsInR5c...**"
        }
    },
    "security": [
        {
            "BearerAuth": []
        }
    ],
    "paths": {
        "/api/user/balance": {
            "get": {
                "summary": "Get authenticated user balance",
                "tags": ["User"],
                "responses": {
                    "200": {
                        "description": "User balance found successfully",
                        "schema": {
                            "$ref": "#/definitions/userBalance"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/404_UserNotFound"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/500"
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/user": {
            "get": {
                "summary": "Get authenticated user",
                "tags": ["User"],
                "responses": {
                    "200": {
                        "description": "User found successfully",
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/404_UserNotFound"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/500"
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete authenticated user",
                "tags": ["User"],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/404_UserNotFound"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/500"
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "patch": {
                "summary": "Update user by id",
                "tags": ["User"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userId",
                        "required": true,
                        "type": "string",
                        "format": "uuid",
                        "description": "User id to update"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createUserParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    },
                    "400": {
                        "description": "Invalid or required (params or fields)",
                        "schema": {
                            "$ref": "#/definitions/400"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/404_UserNotFound"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/500"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new user",
                "tags": ["User"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createUserParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created user successfully",
                        "schema": {
                            "$ref": "#/definitions/UserWithToken"
                        }
                    },
                    "400": {
                        "description": "Invalid or required params",
                        "schema": {
                            "$ref": "#/definitions/400"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/500"
                        }
                    }
                }
            }
        },
        "api/user/login": {
            "post": {
                "summary": "Login user",
                "tags": ["User"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoginUserParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User logged in successfully",
                        "schema": {
                            "$ref": "#/definitions/UserWithToken"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/401"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/500"
                        }
                    }
                }
            }
        },
        "api/user/refresh-token": {
            "post": {
                "summary": "Refresh user token",
                "tags": ["User"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RefreshTokenParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Token generated successfully",
                        "schema": {
                            "$ref": "#/definitions/Tokens"
                        }
                    },
                    "401": {
                        "description": "Invalid or expired refresh token",
                        "schema": {
                            "$ref": "#/definitions/401"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/500"
                        }
                    }
                }
            }
        },
        "/api/transactions": {
            "get": {
                "summary": "Get authenticated user transactions balance",
                "tags": ["Transaction"],
                "parameters": [
                    {
                        "name": "from",
                        "in": "query",
                        "required": true,
                        "description": "Start date for the transaction query (format: YYYY-MM-DD)",
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-01-01"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "required": true,
                        "description": "End date for the transaction query (format: YYYY-MM-DD)",
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-01-31"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transactions found successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/transaction"
                            }
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "schema": {
                            "$ref": "#/definitions/404_TransactionNotFound"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/500"
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "post": {
                "summary": "Create a new transaction for the authenticated user",
                "tags": ["Transaction"],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createTransactionParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created transaction successfully",
                        "schema": {
                            "$ref": "#/definitions/transaction"
                        }
                    },
                    "400": {
                        "description": "Invalid or required params",
                        "schema": {
                            "$ref": "#/definitions/400"
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "schema": {
                            "$ref": "#/definitions/404_TransactionNotFound"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/500"
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        },
        "/api/transactions/{transactionId}": {
            "patch": {
                "summary": "Update a transaction",
                "tags": ["Transaction"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "transactionId",
                        "required": true,
                        "type": "string",
                        "format": "uuid",
                        "description": "Transaction id to update"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateTransactionParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction updated successfully",
                        "schema": {
                            "$ref": "#/definitions/transaction"
                        }
                    },
                    "400": {
                        "description": "Invalid or required (params or fields)",
                        "schema": {
                            "$ref": "#/definitions/400"
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "schema": {
                            "$ref": "#/definitions/404_TransactionNotFound"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/500"
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            },
            "delete": {
                "summary": "Delete transaction by id",
                "tags": ["Transaction"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "transactionId",
                        "required": true,
                        "type": "string",
                        "format": "uuid",
                        "description": "Transaction id to delete"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/transaction"
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "schema": {
                            "$ref": "#/definitions/404_TransactionNotFound"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/500"
                        }
                    }
                },
                "security": [
                    {
                        "BearerAuth": []
                    }
                ]
            }
        }
    },
    "definitions": {
        "createUserParams": {
            "type": "object",
            "required": ["first_name", "last_name", "email", "password"],
            "properties": {
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "email": {
                    "type": "string",
                    "example": "johnDoe@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "LoginUserParams": {
            "type": "object",
            "required": ["email", "password"],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "johnDoe@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "RefreshTokenParams": {
            "type": "object",
            "required": ["refreshToken"],
            "properties": {
                "refreshToken": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.2QT4fwpMeJf3SflKxwRJSMeKKF6POk6yJV_adQssw5c"
                }
            }
        },
        "user": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "e7b2c6a2-8f4a-4c1e-9b7d-2a1e8c3f5d9a"
                },
                "first_name": {
                    "type": "string",
                    "example": "John"
                },
                "last_name": {
                    "type": "string",
                    "example": "Doe"
                },
                "email": {
                    "type": "string",
                    "example": "johnDoe@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "UserWithToken": {
            "allOf": [
                {
                    "$ref": "#/definitions/user"
                },
                {
                    "type": "object",
                    "properties": {
                        "tokens": {
                            "type": "object",
                            "properties": {
                                "accessToken": {
                                    "type": "string",
                                    "example": "eyJhbGciOiJIUzI1NiIsInR5c..."
                                },
                                "refreshToken": {
                                    "type": "string",
                                    "example": "iOiJIUzI1NiIsInR5ceyJhbGc..."
                                }
                            }
                        }
                    }
                }
            ]
        },
        "Tokens": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                },
                "refreshToken": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.Jf36POk6yJV_adQssw5cSflKxwRJSMeKKF2QT4fwpMe"
                }
            }
        },
        "userBalance": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number",
                    "example": 1000
                },
                "totalEarnings": {
                    "type": "number",
                    "example": 1000
                },
                "totalExpenses": {
                    "type": "number",
                    "example": 1000
                },
                "totalInvestments": {
                    "type": "number",
                    "example": 1000
                }
            }
        },
        "transaction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "e7b2c6a2-8f4a-4c1e-9b7d-2a1e8c3f5d9a"
                },
                "user_id": {
                    "type": "string",
                    "example": "e7b2c6a2-8f4a-4c1e-9b7d-2a1e8c3f5d9a"
                },
                "name": {
                    "type": "string",
                    "example": "Salary"
                },
                "date": {
                    "type": "string",
                    "example": "2025-08-14T12:34:56.789Z"
                },
                "type": {
                    "type": "string",
                    "example": "expense",
                    "description": "EARNING, EXPENSE, INVESTMENT"
                },
                "amount": {
                    "type": "number",
                    "example": 1000
                }
            }
        },
        "createTransactionParams": {
            "type": "object",
            "required": ["name", "date", "type", "amount"],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Salary"
                },
                "date": {
                    "type": "string",
                    "example": "2025-08-14T12:34:56.789Z"
                },
                "type": {
                    "type": "string",
                    "example": "EARNING",
                    "description": "EARNING, EXPENSE, INVESTMENT"
                },
                "amount": {
                    "type": "number",
                    "example": 1000
                }
            }
        },
        "updateTransactionParams": {
            "type": "object",
            "required": ["name", "date", "type", "amount"],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Salary"
                },
                "date": {
                    "type": "string",
                    "example": "2025-08-14T12:34:56.789Z"
                },
                "type": {
                    "type": "string",
                    "example": "EARNING",
                    "description": "EARNING, EXPENSE, INVESTMENT"
                },
                "amount": {
                    "type": "number",
                    "example": 1000
                }
            }
        },
        "404_UserNotFound": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "User not found."
                }
            }
        },
        "404_TransactionNotFound": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Transaction not found."
                }
            }
        },
        "400": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "[first_name, last_name, email, password] is required or invalid."
                }
            }
        },
        "401": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Unauthorized."
                }
            }
        },
        "500": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Internal server error."
                }
            }
        }
    }
}
